<ns0:RootFileSystem xmlns:ns0="https://www.linutronix.de/projects/Elbe" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" created="2009-05-20T08:50:56" revision="6" xsi:schemaLocation="https://www.linutronix.de/projects/Elbe dbsfed.xsd">
	<project>
		<name>rpi4-image</name>
		<version>1.0</version>
		<description>
			Rapsberry Pi 4 image
		</description>
		<buildtype>aarch64</buildtype>
		<mirror>
			<primary_host>ftp.de.debian.org</primary_host>
			<primary_path>/debian</primary_path>
			<primary_proto>http</primary_proto>
			<url-list>
				<url>
					<binary>http://ftp.de.debian.org/debian-security bookworm-security main</binary>
					<source>http://ftp.de.debian.org/debian-security bookworm-security main</source>
				</url>
				<url>
					<binary>http://ftp.de.debian.org/debian bookworm non-free-firmware</binary>
					<source>http://ftp.de.debian.org/debian bookworm non-free-firmware</source>
				</url>
				<url>
					<binary>http://ftp.de.debian.org/debian-security bookworm-security non-free-firmware</binary>
					<source>http://ftp.de.debian.org/debian-security bookworm-security non-free-firmware</source>
				</url>
			</url-list>
		</mirror>
		<suite>bookworm</suite>
	</project>
	<target>
		<hostname>rpi64</hostname>
		<domain>tomirgang.de</domain>
		<passwd>linux</passwd>
		<console>serial0,115200</console>
		<!-- speed up build with debootstrap variant minbase.
		Using minbase here and explicit install of systemd later
		on speed up the installation process, since it reduces
		the emulated part (run in QEMU) of the installation
		significant.
		-->
		<debootstrap>
			<variant>minbase</variant>
		</debootstrap>
		<!-- define an sdcard image -->
		<images>
			<msdoshd>
				<name>sdcard.img</name>
				<size>4GB</size>
				<partition>
					<size>128MB</size>
					<label>firmware</label>
				</partition>
				<partition>
					<size>remain</size>
					<label>root</label>
					<bootable/>
				</partition>
			</msdoshd>
		</images>
		<fstab>
			<bylabel>
				<label>firmware</label>
				<mountpoint>/boot/firmware</mountpoint>
				<fs>
					<type>vfat</type>
				</fs>
			</bylabel>
			<bylabel>
				<label>root</label>
				<mountpoint>/</mountpoint>
				<fs>
					<type>ext4</type>
				</fs>
			</bylabel>
		</fstab>
		<project-finetuning>
			<set_packer packer="none">sdcard.img</set_packer>
		</project-finetuning>
		<install-recommends/>
		<pkg-list>
			<!-- kernel -->
			<pkg>linux-image-arm64</pkg>
			<!-- Raspberry Pi firmware -->
			<pkg>firmware-brcm80211</pkg>
			<pkg>raspi-firmware</pkg>
			<!-- systemd incl network and ntp -->
			<pkg>systemd</pkg>
			<pkg>systemd-resolved</pkg>
			<pkg>systemd-timesyncd</pkg>
			<!-- default tools -->
			<pkg>util-linux</pkg>
			<!-- shell -->
			<pkg>bash</pkg>
			<!-- for debuggung -->
			<pkg variant="debug">vim</pkg>
			<pkg variant="debug">iproute2</pkg>
			<pkg variant="debug">iputils-ping</pkg>
			<!-- app -->
			<pkg variant="app">coffee</pkg>
		</pkg-list>
		<finetuning>
			<!-- config raspi firmware -->
			<command>echo 'ROOTPART="LABEL=root"' &gt;&gt; /etc/default/raspi-firmware</command>
			<command>echo 'KERNEL_ARCH="arm64"' &gt;&gt; /etc/default/raspi-firmware</command>
			<command>echo 'init=/usr/lib/systemd/systemd' &gt;&gt; /etc/default/raspi-extra-cmdline</command>
			<!-- regenerate with new config -->
			<command>update-initramfs -u -k all</command>
			<!-- enable systemd services -->
			<!-- network management -->
			<command>systemctl enable systemd-networkd</command>
			<!-- DNS resolving -->
			<command>systemctl enable systemd-resolved</command>
			<!-- NTP client -->
			<command>systemctl enable systemd-timesyncd</command>
		</finetuning>
	</target>
	<archivedir>overlays/networkd</archivedir>
</ns0:RootFileSystem>
